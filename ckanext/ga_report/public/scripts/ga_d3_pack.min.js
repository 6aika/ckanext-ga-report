(function() {
  var Month, colorFunction_browsers;

  window.viz.loadGaReports = function() {
    return d3.json('/scripts/json/ga_reports.json', function(data) {
      var currentVal, graph_pie1, graph_pie2, headline_month, i, percentage, pie_options, randomMonth, randomPie, setMonthData, slider, tick, updateMonth, x, _i, _j, _len, _ref, _ref1, _results;
      randomPie = function(names) {
        var x, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = names.length; _i < _len; _i++) {
          x = names[_i];
          _results.push({
            name: x,
            value: Math.round(15 + Math.random() * 15)
          });
        }
        return _results;
      };
      randomMonth = function() {
        return {
          pie1: randomPie(['Internet Explorer', 'Firefox', 'Safari', 'Google Chrome', 'Opera']),
          pie2: randomPie(['UK', 'USA', 'India', 'Germany', 'France', 'Spain', 'Canada'])
        };
      };
      data = {
        months: (function() {
          var _i, _results;
          _results = [];
          for (i = _i = 2; _i <= 25; i = ++_i) {
            _results.push(new Month(i % 12, 2012 + Math.floor(i / 12)));
          }
          return _results;
        })(),
        monthlydata: (function() {
          var _i, _results;
          _results = [];
          for (i = _i = 2; _i <= 25; i = ++_i) {
            _results.push(randomMonth());
          }
          return _results;
        })()
      };
      _ref = data.monthlydata;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        x.pie2[0].value = x.pie2[0].value * 50;
      }
      console.log(data);
      pie_options = {
        legend: false,
        initialDelay: 200,
        startAngle: Math.PI / 2,
        endAngle: Math.PI * 5 / 2,
        width: 420,
        height: 260,
        radius: 100,
        innerRadius: 0,
        transitionDelay: 0,
        transitionDuration: 300
      };
      graph_pie1 = new viz.PieChart('#graph_pie1', data.monthlydata[0].pie1, colorFunction_browsers(), pie_options);
      pie_options.initialDelay += 150;
      graph_pie2 = new viz.PieChart('#graph_pie2', data.monthlydata[0].pie2, d3.scale.category20(), pie_options);
      setMonthData = function(monthData) {
        graph_pie1.setData(monthData.pie1);
        return graph_pie2.setData(monthData.pie2);
      };
      slider = $('<input type="text">').appendTo('#monthselector').slider({
        min: 0,
        max: data.months.length - 1,
        step: 1,
        orientation: 'horizontal',
        value: data.months.length - 1,
        tooltip: 'show',
        handle: 'round',
        formater: function(x) {
          return data.months[x];
        }
      });
      currentVal = data.months.length - 1;
      headline_month = new viz.Headline(d3.select('#headline_month'), data.months[currentVal], '');
      updateMonth = function(e) {
        var val;
        val = e.value;
        if (val === currentVal) {
          return;
        }
        console.log("MonthSelector selects " + data.months[val] + " val=" + val + " currentVal=" + currentVal);
        headline_month.update(data.months[val]);
        currentVal = val;
        return setMonthData(data.monthlydata[val]);
      };
      slider.on('slide', updateMonth);
      _results = [];
      for (x = _j = 0, _ref1 = data.months.length - 1; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
        percentage = (x * 100) / (data.months.length - 1);
        tick = $('<div class="slider-tick"/>').appendTo('#monthselector .slider').css('left', "" + percentage + "%").toggleClass('major', data.months[x].month === 0).toggleClass('first', x === 0);
        if (data.months[x].month === 0 || x === 0) {
          _results.push($('<div class="caption"/>').text(data.months[x].year).appendTo(tick));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    });
  };

  colorFunction_browsers = function() {
    var known, lookup;
    lookup = d3.scale.category20b();
    known = {
      'Internet Explorer': d3.hsl('#05559c'),
      'Firefox': d3.hsl('#f79f23'),
      'Safari': d3.hsl('#c7c4c5'),
      'Google Chrome': d3.hsl('#fdd901'),
      'Opera': d3.hsl('#cf0970').darker(1.0)
    };
    return function(x) {
      if (x in known) {
        return known[x];
      }
      console.log("Warning: inventing a color for browser=" + x);
      return lookup(x);
    };
  };

  window.viz.icon_for_browser = function(x) {
    var known;
    known = {
      'Internet Explorer': 'internet-explorer_48x48.png',
      'Firefox': 'firefox_48x48.png',
      'Safari': 'safari_48x48.png',
      'Google Chrome': 'chrome_48x48.png',
      'Opera': 'opera_48x48.png',
      'UK': 'flag/GB.png',
      'USA': 'flag/US.png',
      'India': 'flag/IN.png',
      'Germany': 'flag/DE.png',
      'France': 'flag/FR.png',
      'Spain': 'flag/ES.png',
      'Canada': 'flag/CA.png'
    };
    if (x in known) {
      return "/images/" + known[x];
    }
    return console.log("Warning: no icon for browser=" + x);
  };

  Month = (function() {
    function Month(month, year) {
      this.month = month;
      this.year = year;
    }

    Month.prototype.toString = function() {
      var tmp;
      tmp = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
      return tmp[this.month] + ' ' + this.year;
    };

    return Month;

  })();

}).call(this);
